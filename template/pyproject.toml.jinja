[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ project_name }}"
version = "0.1.0"
description = "{{ project_description }}"
authors = [
    { name = "{{ author_name }}", email = "{{ author_email }}" }
]
readme = "README.md"
requires-python = ">={{ python_version }}"
dependencies = [
  "pydantic>=2.10.6",
  "pydantic-settings>=2.6.1",
  {%- if cli %}
  "click>=8.1.7",
  "rich>=14",
  {%- endif %}
]

[project.urls]
homepage = "{{ project_url }}"
source = "{{ project_url }}"
{%- if with_conventional_commits %}
changelog = "{{ project_url.rstrip('/') }}/blob/main/CHANGELOG.md"
{%- endif %}
documentation = "{{ project_url }}"
issues = "{{ project_url.rstrip('/') }}/issues"

{%- if cli %}

[project.scripts]
{{ project_name }} = "{{ package_name }}.cli.__main__:cli"
{%- endif %}

[dependency-groups]
dev = [
    "copier>=9.7.1,<10",
    {%- if with_conventional_commits %}
    "commitizen>=3,<4",
    {%- endif %}
    "faker>=30,<31",
    "mypy>=1,<2",
    "polyfactory>=2,<3",
    "pre-commit>=3,<4",
    "pytest>=8,<9",
    "pytest-cov>=5,<6",
    "pytest-datadir>=1,<2",
    "pytest-env>=1,<2",
    "ruff>=0.5,<0.6",
    "toml-sort>=0.24.2,<0.25",
    "safety>=3.2.9,<4",
]

[tool.uv]
required-version = ">=0.8.4"

{%- if with_conventional_commits %}
[tool.commitizen]  # https://commitizen-tools.github.io/commitizen/config/
bump_message = "bump(release): v$current_version â†’ v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version_provider = "pep621"
{%- endif %}

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
exclude = []
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
check_untyped_defs = true
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
pythonpath = [
  ".", "{{ package_name }}",
]
testpaths = [
    "tests",
]
addopts = [
    "--cov={{ package_name }}/",
    "--cov-report=term",
    "--cov-report=html:coverage/html",
    "--cov-report=xml:coverage/coverage.xml",
    "--junitxml=coverage/junit/test-results.xml",
    "--color=yes"{% if development_environment == 'strict' %},
    "--strict-config",
    "--strict-markers",
    "--typeguard-packages={{ package_name }}"{% endif %}
]

[tool.pytest_env]
ENVIRONMENT = "test"

[tool.coverage.run]
omit = [
    "tests/*",
    "*/tests/*",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]

[tool.tomlsort]
all = false
in_place = true
no_comments = false
no_header_comments = false
no_footer_comments = false
no_inline_comments = false
no_block_comments = false
no_sort_tables = true
sort_table_keys = false
sort_inline_tables = false
sort_inline_arrays = false
trailing_comma_inline_array = false
ignore_case = true

[tool.tomlsort.overrides."dependencies"]
table_keys = true

[tool.tomlsort.overrides."dev"]
table_keys = true

[tool.tomlsort.overrides."typing"]
table_keys = true
